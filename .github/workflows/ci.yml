name: continuous-integration

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    container:
      image: rust:1.59
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Install rustfmt
        run: rustup component add rustfmt
      - name: Check Format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  test:
    name: Build and test
    needs: fmt
    runs-on: ubuntu-latest
    container:
      image: rust:1.59
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install rust cache
        uses: Swatinem/rust-cache@v1

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.12

      - name: Run tests, with all features
        run: cargo test --locked --workspace --all-features

  coverage:
    name: Coverage
    needs: test
    runs-on: ubuntu-latest
    container:
      image: rust:1.59
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install rust cache
        uses: Swatinem/rust-cache@v1

      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.15.0'
          args: '-- --test-threads 1'

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v2.1.0
        with:
          token: ${{secrets.CODECOV_TOKEN}}

  clippy:
    needs: fmt
    runs-on: ubuntu-latest
    container:
      image: rust:1.59
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            components: clippy
            override: true

      - name: Run clippy
        uses: actions-rs/clippy@master
        with:
          args: --all-features --all-targets
