name: continuous-integration

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2.4.0
      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1.0.7
        with:
          profile: minimal
          toolchain: nightly-2021-04-18
          components: rustfmt
          override: true
          default: true
      - name: Check Format
        uses: actions-rs/cargo@v1.0.3
        with:
          command: fmt
          args: --all -- --check

  test:
    name: Build and test
    needs: fmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.4.0
    - uses: Swatinem/rust-cache@v1
    - name: Install cmake
      run: sudo apt-get install -y cmake
    - name: Run tests, with all features
      run: cargo test --locked --workspace --all-features

  coverage:
    name: Coverage
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.15.0'
          args: '-- --test-threads 1'
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v1.0.2

      - name: Archive code coverage results
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage-report
          path: raiden.xml

  # TODO: as explained in the official repo (https://github.com/actions-rs/clippy), this action uses unstable GH actions features, but has the huge advantage of not requiring `GITHUB_TOKEN` and working on PRs from forked repositories ; should eventually replace `actions-rs/clippy@master` with a specific version
  clippy:
    needs: fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: actions-rs/toolchain@v1.0.7
        with:
            toolchain: nightly
            components: clippy
            override: true
      - uses: actions-rs/clippy@master
        with:
          args: --all-features --all-targets
